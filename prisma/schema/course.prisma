enum LessonType {
    VIDEO
    BLOG
}

enum CourseLevel {
    BEGINNER
    INTERMEDIATE
    ADVANCED
}

model Course {
    id             String                @id @default(uuid())
    slug           String                @unique
    name           String
    teacherId      String
    description    String
    thumbnailUrl   String                @default("https://i.imgur.com/hAV6F86.jpeg")
    isDeleted      Boolean               @default(false)
    rating         Float                 @default(0)
    level          CourseLevel           @default(BEGINNER)
    numEnrollments Int                   @default(0)
    numLessons     Int                   @default(0)
    modules        Module[]
    categories     CategoriesOnCourses[]
    enrollments    Enrollment[]
    reviews        Review[]
    numReviews     Int                   @default(0)
    teacher        Teacher               @relation(fields: [teacherId], references: [id])
    createdAt      DateTime              @default(now())
    updatedAt      DateTime              @updatedAt
    deletedAt      DateTime?

    @@map("Courses")
}

model Category {
    id      String                @id @default(uuid())
    name    String                @unique
    courses CategoriesOnCourses[]

    @@map("Categories")
}

model CategoriesOnCourses {
    courseId   String
    categoryId String
    course     Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
    category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

    @@id([courseId, categoryId])
    @@map("CategoriesOnCourses")
}

model Module {
    id          String   @id @default(uuid())
    courseId    String
    slug        String   @unique
    position    Int
    name        String
    description String
    lessons     Lesson[]
    quizzes     Quizz[]
    course      Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())

    @@unique([courseId, position])
    @@map("Modules")
}

model Lesson {
    id          String @id @default(uuid())
    moduleId    String
    slug        String @unique
    position    Int
    name        String
    description String
    content     Json?
    module      Module @relation(fields: [moduleId], references: [id], onDelete: Cascade)

    @@unique([moduleId, position])
    @@map("Lessons")
}

model Quizz {
    id          String            @id @default(uuid())
    moduleId    String
    name        String
    position    Int
    description String?
    timeLimit   Int //minutes
    module      Module            @relation(fields: [moduleId], references: [id], onDelete: Cascade)
    questions   Question[]
    submissions QuizzSubmission[]
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @default(now())

    @@unique([position, moduleId])
    @@map("Quizzes")
}

model Question {
    id        String   @id @default(uuid())
    quizzId   String
    position  Int
    content   String
    options   Json[]
    quizz     Quizz    @relation(fields: [quizzId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@unique([position, quizzId])
    @@map("Questions")
}
