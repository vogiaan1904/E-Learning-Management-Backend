paths:
  /enrollments/api-status:
    get:
      tags:
        - Enrollment
      summary: Check Enrollment APIs status
      responses:
        200: 
          description: OK
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/ResStatus"
  /enrollments:
    post:
      tags:
        - Enrollment
      summary: Enroll Course - Student
      requestBody:
        description: Courses's Id
        content:
          application/json:
            schema:
              type: object
              properties:
                courseId:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
              required:
                - courseId
      responses:
        201:
          description: Enrollment Created Successfully
          content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResCreateEnrollment" 
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
  /enrollments/many:
    get:
      tags:
        - Enrollment
      summary: Get All Enrollments
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollments"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
    
  
  /enrollments/{id}:
    get:
      tags:
        - Enrollment
      summary: Get Enrollment - Authorized
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
    delete:
      tags:
        - Enrollment
      summary: Delete Enrollment - Authorized
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
    patch:  
      tags:
        - Enrollment
      summary: Update Enrollment
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      requestBody:
        description: The properties `status` and `feedback` are optional
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "IN_PROGRESS"
                feedback:
                  type: string
                  example: "This course is extremely hard, I gave up!"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
  /enrollments/{id}/cancel:
    patch:
      tags:
        - Enrollment
      summary: Cancel Enrollment - Student
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
  /enrollments/{id}/lesson-progress:
    patch:
      tags:
        - Enrollment
      summary: Update the lessons progress - Student
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      requestBody:
        description: The lessonId
        content:
          application/json:
            schema:
              type: object
              properties:
                lessonId:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
  /enrollments/{id}/module-progress:
    patch:
      tags:
        - Enrollment
      summary: Update the modules progress - Student
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      requestBody:
        description: The moduleId
        content:
          application/json:
            schema:
              type: object
              properties:
                moduleId:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"

  /enrollments/{id}/feed-back:
    patch:
      tags:
        - Enrollment
      summary: Feed back to the course - Student
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The enrollment's id
      requestBody:
        description: Content of the feedback
        content:
          application/json:
            schema:
              type: object
              properties:
                feedback:
                  type: string
                  example: "It's real hard, I gave up!"
              required:
                - feedback
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetEnrollment" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResError"


components:
  schemas:
    ResStatus:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        code:
          type: number
    Enrollment:
      type: object
      properties:
        id:
          type: string
          example: "8cb4994d-e4b8-4844-ae9b-759cacc40abf"
        studentId:
          type: string
          example: "48309873-2ec9-438a-b81f-f960a387bcd7"
        courseId:
          type: string
          example: "95e30afa-020f-463a-907f-142888fa5de1"
        grade:
          type: integer
          example: 0
        feedback:
          type: string
          nullable: true
          example: null
        status:
          type: string
          example: "IN_PROGRESS"
        completion:
          type: integer
          example: 0
        completedLessonsIds:
          type: array
          items:
            type: string
            example: "lesson-id-1"
          example: []
        completedModulesIds:
          type: array
          items:
            type: string
            example: "module-id-1"
          example: []
        enrolledAt:
          type: string
          format: date-time
          example: "2024-11-14T07:07:31.700Z"
        cancelledAt:
          type: string
          format: date-time
          nullable: true
          example: null
    ResCreateEnrollment:
      type: object
      properties: 
        message: 
          type: string
          example: "Enrolled course successfully"
        status:
          type: string
          example: "success"
        enrollment: 
          $ref: "#/components/schemas/Enrollment"
    ResGetEnrollment:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        enrollment:
          type: object
          $ref: "#/components/schemas/Enrollment"
    ResGetEnrollments:
      type: object
      properties:
        message:
          type: string
          example: "Get enrollments successfully"
        status:
          type: string
          example: "success"
        enrollments:
          type: array
          items:
            $ref: "#/components/schemas/Enrollment"
          example: []
    ResError:
      type: object
      properties:
        message: 
          type: string
        status:
          type: string
          example: "failed"