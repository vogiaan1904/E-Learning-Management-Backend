paths:
  /courses/api-status:
    get:
      tags:
        - Course
      summary: Check course APIs status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResStatus"
  /courses:
    post:
      tags:
        - Course
      summary: Create Course - Teacher
      requestBody:
        description: Request body for creating a new course. The `categories` field is optional.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "DSA"
                description:
                  type: string
                  example: "An advanced course on Data Structures and Algorithms"
                teacherId:
                  type: string
                  example: "123e4567-e"
                categories:
                  type: array
                  items:
                    type: string
                  description: Optional list of categories for the course (e.g., "WebDevelopment", "MachineLearning")

              required:
                - teacherId
                - name
                - description
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCreateCourse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        409:
          description: Conflict (e.g., course already exists with the same name)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"     

  /courses/many:
    get:
      tags:
        - Course
      summary: Get courses with optional filtering and pagination - Authenticated
      parameters:
        - name: teacherId
          in: query
          description: ID of the teacher to filter courses by
          required: false
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: category
          in: query
          description: Category of the course
          required: false
          schema:
            type: string
            example: "WebDevelopment"
        - name: limit
          in: query
          description: Number of courses to retrieve (pagination)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 10
        - name: skip
          in: query
          description: Number of courses to skip (pagination)
          required: false
          schema:
            type: integer
            minimum: 0
            example: 0
      responses:
        200:
          description: A list of courses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourses"
        204:
          description: No courses found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description:  Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
  /courses/{id}:
    get:
      tags:
        - Course
      summary: Get Course By Id - Authenticated
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourse" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
    patch:
      tags:
        - Course
      summary: Update Course - Teacher, Admin
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      requestBody:
        description: Request body for updating a course
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "DSA"
                description:
                  type: string
                  example: "An advanced course on Data Structures and Algorithms"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourse" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"   
    delete:
      tags:
        - Course
      summary: Delete Course - Teacher, Admin
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourse" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"




components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: string
          example: "95e30afa-020f-463a-907f-142888fa5de1"
        slug:
          type: string
          example: "advanced-web-development"
        name:
          type: string
          example: "Advanced Web Development"
        teacherId:
          type: string
          example: "d5df66a6-82e1-48d9-918d-01b11ca42601"
        description:
          type: string
          example: "Deep dive into modern web development frameworks and best practices."
        isDeleted:
          type: boolean
          example: false
        numEnrollments:
          type: integer
          example: 0
        numLessons:
          type: integer
          example: 0
        createdAt:
          type: string
          format: date-time
          example: "2024-11-14T06:43:37.982Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-11-14T06:43:37.982Z"
        deletedAt:
          type: string
          format: date-time
          nullable: true
          example: null
    Enrollment:
      type: object
      properties:
        id:
          type: string
        studentId:
          type: string
        courseId:
          type: string
        grade:
          type: string
        feedback:
          type: string
        status:
          type: string
        completion:
          type: string
    ReqCreateCourse:
      type: object
      properties:
        teacherId:
          type: string
          example: "wuyegfihwegfkhwhef"
        name:
          type: string
          example: "DSA"
        description:
          type: string
          example: "fucking hard"
    ReqGetCourse:
      type: object
      properties:
        teacherId:
          type: string
        name:
          type: string
        description:
          type: string
    ResCreateCourse:
      type: object
      properties:
        message:
          type: string
          example: "Course created successfully"
        status:
          type: string
          example: "success"
        course:
          $ref: "#/components/schemas/Course"
      required:
        - message
        - status
        - course
    ResGetCourse:
      type: object
      properties: 
        message:
          type: string
          example: "Get course successfully"
        status:
          type: string
          example: "success"
        course:
          $ref: "#/components/schemas/Course"
        moduleIds:
          type: array
          items:
            type: string
            example: "module-id-1"
          description: "List of module IDs associated with the course."
          example: []
        enrollment:
          type: object
          nullable: true
          description: "Enrollment details for the course."
          example: null
    ResGetCourses:
      properties: 
        message:
          type: string
          example: "Get courses successfully"
        status:
          type: string
          example: "success"
        courses:
          type: array
          items:
            $ref: "#/components/schemas/Course"
          description: "List of courses retrieved."
          example: []
    ResDeleteCourse:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
    ResCreateEnrollment:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        enrollment:
          type: object
          $ref: "#/components/schemas/Enrollment"
    ResCancelEnrollment:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        enrollment:
          type: object
          $ref: "#/components/schemas/Enrollment"
    ResStatus:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        code:
          type: number
    ResCourseError:
      type: object
      properties:
        message: 
          type: string
        status:
          type: string
          example: "failed"
  
