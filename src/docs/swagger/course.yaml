paths:
  /courses:
    post:
      tags:
        - Course
      summary: Create Course
      requestBody:
        description: Request body for creating a new course. The `categories` field is optional.
        content:
          application/json:
            schema:
              type: object
              properties:
                teacherId:
                  type: string
                  format: uuid
                  example: "123e4567-e89b-12d3-a456-426614174000"
                name:
                  type: string
                  example: "DSA"
                description:
                  type: string
                  example: "An advanced course on Data Structures and Algorithms"
                categories:
                  type: array
                  items:
                    type: string
                  description: Optional list of categories for the course (e.g., "WebDevelopment", "MachineLearning")
              required:
                - teacherId
                - name
                - description
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCreateCourse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        409:
          description: Conflict (e.g., course already exists with the same name)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
  /courses/{id}:
    get:
      tags:
        - Course
      summary: Get Course By Id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourse" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
    patch:
      tags:
        - Course
      summary: Update Course
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      requestBody:
        description: Request body for updating a course
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "DSA"
                description:
                  type: string
                  example: "An advanced course on Data Structures and Algorithms"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourse" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"   
    delete:
      tags:
        - Course
      summary: Delete Course By Id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResGetCourse" 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
  /courses/many:
    get:
  
      tags:
        - Course
      summary: Get courses with optional filtering and pagination
      parameters:
        - name: teacherId
          in: query
          description: ID of the teacher to filter courses by
          required: false
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: category
          in: query
          description: Category of the course
          required: false
          schema:
            type: string
            example: "WebDevelopment"
        - name: limit
          in: query
          description: Number of courses to retrieve (pagination)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 10
        - name: skip
          in: query
          description: Number of courses to skip (pagination)
          required: false
          schema:
            type: integer
            minimum: 0
            example: 0
      responses:
        200:
          description: A list of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResGetCourse"
                $ref: "#/components/schemas/ResGetCourse"
        204:
          description: No courses found
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description:  Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
  /courses/{id}/enroll:
    post:
      tags:
        - Course
      summary: Update Course
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The course's Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCreateEnrollment" 
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCourseError"    

components:
  schemas:

    Course:
      type: object
      properties:
        id:
          type: string
          example: "course123"
        name:
          type: string
          example: "Data Structures"
        description:
          type: string
          example: "An advanced course on data structures"
        teacherId:
          type: string
          example: "teacher123"


    ReqCreateCourse:
      type: object
      properties:
        teacherId:
          type: string
          example: "wuyegfihwegfkhwhef"
        name:
          type: string
          example: "DSA"
        description:
          type: string
          example: "fucking hard"
    ReqGetCourse:
      type: object
      properties:
        teacherId:
          type: string
        name:
          type: string
        description:
          type: string

    ResCreateCourse:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        course: 
          $ref: "#/components/schemas/Course"
    ResGetCourse:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        course: 
          $ref: "#/components/schemas/Course"
    ResDeleteCourse:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
    ResCreateEnrollment:
      type: object
      properties: 
        message: 
          type: string
        success:
          type: boolean
        enrollment:
          type: object
    ResCourseError:
      type: object
      properties:
        message: 
          type: string
        status:
          type: string
          example: "failed"
  
